/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;
//Librerías ocupadas
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos Pérez
 */
public class Menu extends javax.swing.JFrame {
    //Cadena de conexión para la base de datos
    public static final String URL = "jdbc:mysql://localhost:3306/prueba";
    public static final String USERNAME = "root";
    public static final String PASSWORD = "root";
    PreparedStatement ps;
    ResultSet rs;

    public static Connection getConnection() {
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection(URL, USERNAME, PASSWORD);
            // JOptionPane.showMessageDialog(null, "Conexión Exitosa");
        } catch (Exception e) {
            System.out.println(e);

        }
        return con;
    }
    //Método para limpiar los campos del formulario
    private void limpiarcampos() {
        txt_id.setText(null);
        txt_nombre.setText(null);
        txt_apaterno.setText(null);
        txt_area.setText(null);
        txt_email.setText(null);
        txt_fechasolicitud.setText(null);
        txt_telefono.setText(null);
        txt_reporte.setText(null);
        combo_status.setSelectedIndex(0);
    }

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Maintenance Work Orders");
        this.setResizable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        et_id = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();
        et_nombre = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        et_apaterno = new javax.swing.JLabel();
        txt_apaterno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_area = new javax.swing.JTextField();
        et_email = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_fechasolicitud = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_telefono = new javax.swing.JTextField();
        et_reporte = new javax.swing.JLabel();
        txt_reporte = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        combo_status = new javax.swing.JComboBox<>();
        btn_guardar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_workorders = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        et_id.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        et_id.setForeground(new java.awt.Color(51, 153, 0));
        et_id.setText("ID:");

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });
        txt_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idKeyTyped(evt);
            }
        });

        et_nombre.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        et_nombre.setForeground(new java.awt.Color(51, 153, 0));
        et_nombre.setText("Nombre:");

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreKeyTyped(evt);
            }
        });

        et_apaterno.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        et_apaterno.setForeground(new java.awt.Color(51, 153, 0));
        et_apaterno.setText("Apellido:");

        txt_apaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_apaternoKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 0));
        jLabel1.setText("Area:");

        txt_area.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_areaKeyTyped(evt);
            }
        });

        et_email.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        et_email.setForeground(new java.awt.Color(51, 153, 0));
        et_email.setText("Email:");

        txt_email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_emailKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 0));
        jLabel2.setText("Fecha de Solicitud:");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 153, 0));
        jLabel3.setText("Teléfono:");

        txt_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_telefonoKeyTyped(evt);
            }
        });

        et_reporte.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        et_reporte.setForeground(new java.awt.Color(51, 153, 0));
        et_reporte.setText("Reporte:");

        txt_reporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_reporteKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 153, 0));
        jLabel4.setText("Estado del Reporte:");

        combo_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona un valor", "En progreso", "Resuelto", "Cancelado", "En Espera" }));

        btn_guardar.setText("Agregar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        btn_limpiar.setText("Limpiar");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/logo.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 153, 0));
        jLabel6.setText("ORDENES DE TRABAJO PARA MANTENIMIENTO");

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 153, 0));
        jLabel7.setText("Versión alpha .007");

        btn_workorders.setText("View Work Orders");
        btn_workorders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_workordersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(et_id)
                                .addGap(27, 27, 27)
                                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(et_apaterno)
                            .addComponent(et_nombre)
                            .addComponent(jLabel1)
                            .addComponent(et_email)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(et_reporte)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_reporte)
                                    .addComponent(txt_nombre, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_apaterno, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_area, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_email, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_fechasolicitud, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_telefono, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(combo_status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btn_buscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(245, 245, 245)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(264, 264, 264))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_guardar)
                                .addGap(29, 29, 29)
                                .addComponent(btn_modificar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_eliminar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_limpiar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_workorders)
                                .addGap(131, 131, 131))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(et_id, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_buscar)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(et_nombre)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(et_apaterno)
                    .addComponent(txt_apaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(et_email)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_fechasolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(et_reporte)
                    .addComponent(txt_reporte, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combo_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_guardar)
                    .addComponent(btn_modificar)
                    .addComponent(btn_eliminar)
                    .addComponent(btn_limpiar)
                    .addComponent(btn_workorders))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        // Método para insertar nuevos registros:
        Connection con = null;
        try {

            con = getConnection();
            ps = con.prepareStatement("INSERT INTO prueba (nombre, apaterno, area, correo_electronico, fecha_solicitud, telefono, reporte, status) VALUES (?,?,?,?,?,?,?,?) ");
            //ps.setString(1, txt_id.getText());
            ps.setString(1, txt_nombre.getText());
            ps.setString(2, txt_apaterno.getText());
            ps.setString(3, txt_area.getText());
            ps.setString(4, txt_email.getText());
            ps.setDate(5, Date.valueOf(txt_fechasolicitud.getText()));
            ps.setString(6, txt_telefono.getText());
            ps.setString(7, txt_reporte.getText());
            ps.setString(8, combo_status.getSelectedItem().toString());

            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Datos Guardados Correctamente");
                limpiarcampos();
            } else {
                JOptionPane.showMessageDialog(null, "La información no se guardo");
            }

            con.close();

        } catch (Exception e) {
            System.err.println(e);

        }


    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        // Método para búsqueda de un registro por ID:

        Connection con = null;
        try {

            con = getConnection();
            ps = con.prepareStatement("SELECT * FROM prueba where id = ?");
            ps.setString(1, txt_id.getText());

            rs = ps.executeQuery();
            if (rs.next()) {
                txt_id.setText(rs.getString("id"));
                txt_nombre.setText(rs.getString("nombre"));
                txt_apaterno.setText(rs.getString("apaterno"));
                txt_area.setText(rs.getString("area"));
                txt_email.setText(rs.getString("correo_electronico"));
                txt_fechasolicitud.setText(rs.getString("fecha_solicitud"));
                txt_telefono.setText(rs.getString("telefono"));
                txt_reporte.setText(rs.getString("reporte"));
                combo_status.setSelectedItem(rs.getString("status"));
            } else {
                JOptionPane.showMessageDialog(null, "No existen valores que coincidan con la búsqueda para mostrar");
                limpiarcampos();
            }
        } catch (Exception e) {
            System.err.println(e);
        }


    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        // Método para modificar un registro:
        Connection con = null;
        try {

            con = getConnection();
              
            ps = con.prepareStatement("UPDATE prueba SET id=?, nombre=?, apaterno=?, area=?, correo_electronico=?, fecha_solicitud=?, telefono=?, status=? WHERE id=? ");

          ps.setString(1, txt_id.getText());
            ps.setString(2, txt_nombre.getText());
            ps.setString(3, txt_apaterno.getText());
            ps.setString(4, txt_area.getText());
            ps.setString(5, txt_email.getText());
            ps.setDate(6, Date.valueOf(txt_fechasolicitud.getText()));
            ps.setString(7, txt_telefono.getText());
            ps.setString(8, combo_status.getSelectedItem().toString());
            ps.setString(9, txt_id.getText());
            
            /* El campo Reporte no se puede modificar, esto se hizo como protección para evitar que manipulen el pedido original
            ps.setString(1, txt_id.getText());
            ps.setString(2, txt_nombre.getText());
            ps.setString(3, txt_apaterno.getText());
            ps.setString(4, txt_area.getText());
            ps.setString(5, txt_email.getText());
            ps.setDate(6, Date.valueOf(txt_fechasolicitud.getText()));
            ps.setString(7, txt_telefono.getText());
            ps.setString(8, combo_status.getSelectedItem().toString());
            ps.setString(9, txt_reporte.getText());
            ps.setString(10, txt_id.getText()));
            */

            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "La información ha sido actualizada correctamente");
                limpiarcampos();
            } else {
                JOptionPane.showMessageDialog(null, "La información no se ha podido guardar");
            }

            con.close();

        } catch (Exception e) {
            System.out.println(e);

        }
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
         // Método para eliminar registros:
        Connection con = null;
        try {

            con = getConnection();
              
            ps = con.prepareStatement("DELETE FROM prueba WHERE id=?");

            ps.setInt(1, Integer.parseInt(txt_id.getText()));
            
            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Se ha eliminado el registro de manera exitosa");
                limpiarcampos();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha podido eliminar el registro");
            }

            con.close();

        } catch (Exception e) {
            System.out.println(e);

        }
        
        
        
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        // Método para Limpiar los Campos:
        limpiarcampos();
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_idActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
   
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idKeyTyped
        // Validación para recibir números solamente
         char solonumero = evt.getKeyChar();
        if (Character.isLetter(solonumero)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Este campo solo admite numeros");
        }
    }//GEN-LAST:event_txt_idKeyTyped

    private void txt_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyTyped
        // validación para recibir texto solamente:
         char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            String cad = ("" + c).toUpperCase();
            c = cad.charAt(0);
            evt.setKeyChar(c);
            
        }
        
        if (Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Este campo solo admite texto");
            
        }
     
                                  

    }//GEN-LAST:event_txt_nombreKeyTyped

    private void txt_apaternoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_apaternoKeyTyped
        // validación para recibir texto solamente:
         char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            String cad = ("" + c).toUpperCase();
            c = cad.charAt(0);
            evt.setKeyChar(c);
            
        }
        
        if (Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Este campo solo admite texto");
            
        }
        
    }//GEN-LAST:event_txt_apaternoKeyTyped

    private void txt_areaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_areaKeyTyped
        // validación para recibir texto solamente:
         char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            String cad = ("" + c).toUpperCase();
            c = cad.charAt(0);
            evt.setKeyChar(c);
            
        }
        
        if (Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Este campo solo admite texto");
            
        }
    }//GEN-LAST:event_txt_areaKeyTyped

    private void txt_emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_emailKeyTyped
      
      
    }//GEN-LAST:event_txt_emailKeyTyped

    private void txt_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telefonoKeyTyped
        // Validación para recibir números solamente
         char solonumero = evt.getKeyChar();
        if (Character.isLetter(solonumero)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"Este campo solo admite numeros");
        }
         String Caracteres = txt_telefono.getText();
        if(Caracteres.length()>=10){
            evt.consume();
            JOptionPane.showMessageDialog(null,"Maximo 10 caracteres");
        }
    }//GEN-LAST:event_txt_telefonoKeyTyped

    private void txt_reporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_reporteKeyTyped
        // Campo para descripción del reporte
         
    }//GEN-LAST:event_txt_reporteKeyTyped

    private void btn_workordersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_workordersActionPerformed
Reportes reportes = new Reportes();
        reportes.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btn_workordersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton btn_workorders;
    private javax.swing.JComboBox<String> combo_status;
    private javax.swing.JLabel et_apaterno;
    private javax.swing.JLabel et_email;
    private javax.swing.JLabel et_id;
    private javax.swing.JLabel et_nombre;
    private javax.swing.JLabel et_reporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txt_apaterno;
    private javax.swing.JTextField txt_area;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fechasolicitud;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_reporte;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
